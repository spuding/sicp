;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;; Queue ;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;


#lang sicp

;;构造队列
(define (make-queue) (cons '() '()))

;;队列头指针和尾指针，修改队列头和尾指针
(define (front-ptr queue) (car queue))

(define (rear-ptr queue) (cdr queue))

(define (set-front-ptr! queue item) (set-car! queue item))

(define (set-rear-ptr! queue item) (set-cdr! queue item))

;;空队列
(define (empty-queue? queue) (null? (front-ptr queue)))

;;选取队列前端指针
(define (front-queue queue)
  (if (empty-queue? queue)
      (error "empty queue" queue)
      (car (front-ptr queue))))

;;插入队头
(define (insert-queue! queue item)
  (let ((new-pair (cons (item '()))))
    (cond ((empty-queue? queue)
	   (set-front-ptr! queue new-pair)
	   (set-rear-ptr! queue new-pair)
	   queue)
	  (else
	   (set-cdr! (rear-ptr queue) new-pair)
	   (set-rear-ptr! queue new-pair)
	   queue))))

;;删除队尾
(define (delete-queue! queue)
  (cond ((empty-queue? queue)
	 (error "Delete! called with an empty queue" queue))
	(else
	 (set-front-ptr! queue (cdr (front-ptr queue)))
	 queue)))

;;打印队列
(define (print-queue queue)
  (q (front-ptr queue)))
